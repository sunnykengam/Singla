//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckingDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SinglaEntities : DbContext
    {
        public SinglaEntities()
            : base("name=SinglaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<App_Checking_New_GetBatchListByItemId_Result> App_Checking_New_GetBatchListByItemId(Nullable<int> itemId, Nullable<System.DateTime> fromDt, Nullable<System.DateTime> toDt, Nullable<double> rate)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var fromDtParameter = fromDt.HasValue ?
                new ObjectParameter("FromDt", fromDt) :
                new ObjectParameter("FromDt", typeof(System.DateTime));
    
            var toDtParameter = toDt.HasValue ?
                new ObjectParameter("ToDt", toDt) :
                new ObjectParameter("ToDt", typeof(System.DateTime));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetBatchListByItemId_Result>("App_Checking_New_GetBatchListByItemId", itemIdParameter, fromDtParameter, toDtParameter, rateParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetBatchWiseItem_Result> App_Checking_New_GetBatchWiseItem(string custCode, string invoiceDate, Nullable<int> itemid, string batch, string invnum)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var batchParameter = batch != null ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetBatchWiseItem_Result>("App_Checking_New_GetBatchWiseItem", custCodeParameter, invoiceDateParameter, itemidParameter, batchParameter, invnumParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetCheckedDetails_Result> App_Checking_New_GetCheckedDetails(Nullable<int> checkerID, string invDate)
        {
            var checkerIDParameter = checkerID.HasValue ?
                new ObjectParameter("CheckerID", checkerID) :
                new ObjectParameter("CheckerID", typeof(int));
    
            var invDateParameter = invDate != null ?
                new ObjectParameter("InvDate", invDate) :
                new ObjectParameter("InvDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetCheckedDetails_Result>("App_Checking_New_GetCheckedDetails", checkerIDParameter, invDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> App_Checking_New_GetCheckingHoldCount(string custCode, Nullable<System.DateTime> invoiceDate, string block, string invNum)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var invNumParameter = invNum != null ?
                new ObjectParameter("InvNum", invNum) :
                new ObjectParameter("InvNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("App_Checking_New_GetCheckingHoldCount", custCodeParameter, invoiceDateParameter, blockParameter, invNumParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetCheckList_Result> App_Checking_New_GetCheckList(string custCode, string invoiceDate, string block, string invnum)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetCheckList_Result>("App_Checking_New_GetCheckList", custCodeParameter, invoiceDateParameter, blockParameter, invnumParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetCustomerInvoiceSummary_Result> App_Checking_New_GetCustomerInvoiceSummary(string custcode, string invdt, string invnum)
        {
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetCustomerInvoiceSummary_Result>("App_Checking_New_GetCustomerInvoiceSummary", custcodeParameter, invdtParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_GetEdpStatus(string custcode, string invdt, string invnum, ObjectParameter esStatus)
        {
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_GetEdpStatus", custcodeParameter, invdtParameter, invnumParameter, esStatus);
        }
    
        public virtual ObjectResult<string> App_Checking_New_GetInvoiceNumbers(string custcode, string invdt, string invnum)
        {
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("App_Checking_New_GetInvoiceNumbers", custcodeParameter, invdtParameter, invnumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> App_Checking_New_GetInvoiceNuminAppInvoiceChanges(string custCode, Nullable<System.DateTime> invoiceDate, string invnum)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("App_Checking_New_GetInvoiceNuminAppInvoiceChanges", custCodeParameter, invoiceDateParameter, invnumParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetInvoiceStatus_Result> App_Checking_New_GetInvoiceStatus(string custcode, string invdt, string invnum)
        {
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetInvoiceStatus_Result>("App_Checking_New_GetInvoiceStatus", custcodeParameter, invdtParameter, invnumParameter);
        }
    
        public virtual ObjectResult<App_Checking_New_GetUserMaster_Result> App_Checking_New_GetUserMaster(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<App_Checking_New_GetUserMaster_Result>("App_Checking_New_GetUserMaster", userNameParameter);
        }
    
        public virtual int App_Checking_New_InsertAppInvoiceChanges(Nullable<System.DateTime> invdate, Nullable<int> invnum, Nullable<int> custid, string custcode, string customername, Nullable<int> itemid, string itemcode, string itemname, string remarks, string oldqty, string newqty, string oldbatch, string newbatch, string checkername, Nullable<System.DateTime> changedatetime, string description, string isDelete, Nullable<int> isStatus, Nullable<int> newPsrlno, string invType, string routeName, Nullable<int> oldPsrlno, Nullable<int> id, Nullable<decimal> fQty, Nullable<int> newFQty, Nullable<decimal> mRP, Nullable<decimal> rate)
        {
            var invdateParameter = invdate.HasValue ?
                new ObjectParameter("Invdate", invdate) :
                new ObjectParameter("Invdate", typeof(System.DateTime));
    
            var invnumParameter = invnum.HasValue ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(int));
    
            var custidParameter = custid.HasValue ?
                new ObjectParameter("custid", custid) :
                new ObjectParameter("custid", typeof(int));
    
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var customernameParameter = customername != null ?
                new ObjectParameter("customername", customername) :
                new ObjectParameter("customername", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("itemid", itemid) :
                new ObjectParameter("itemid", typeof(int));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("itemname", itemname) :
                new ObjectParameter("itemname", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var oldqtyParameter = oldqty != null ?
                new ObjectParameter("oldqty", oldqty) :
                new ObjectParameter("oldqty", typeof(string));
    
            var newqtyParameter = newqty != null ?
                new ObjectParameter("newqty", newqty) :
                new ObjectParameter("newqty", typeof(string));
    
            var oldbatchParameter = oldbatch != null ?
                new ObjectParameter("oldbatch", oldbatch) :
                new ObjectParameter("oldbatch", typeof(string));
    
            var newbatchParameter = newbatch != null ?
                new ObjectParameter("newbatch", newbatch) :
                new ObjectParameter("newbatch", typeof(string));
    
            var checkernameParameter = checkername != null ?
                new ObjectParameter("Checkername", checkername) :
                new ObjectParameter("Checkername", typeof(string));
    
            var changedatetimeParameter = changedatetime.HasValue ?
                new ObjectParameter("changedatetime", changedatetime) :
                new ObjectParameter("changedatetime", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isDeleteParameter = isDelete != null ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(string));
    
            var isStatusParameter = isStatus.HasValue ?
                new ObjectParameter("IsStatus", isStatus) :
                new ObjectParameter("IsStatus", typeof(int));
    
            var newPsrlnoParameter = newPsrlno.HasValue ?
                new ObjectParameter("NewPsrlno", newPsrlno) :
                new ObjectParameter("NewPsrlno", typeof(int));
    
            var invTypeParameter = invType != null ?
                new ObjectParameter("invType", invType) :
                new ObjectParameter("invType", typeof(string));
    
            var routeNameParameter = routeName != null ?
                new ObjectParameter("RouteName", routeName) :
                new ObjectParameter("RouteName", typeof(string));
    
            var oldPsrlnoParameter = oldPsrlno.HasValue ?
                new ObjectParameter("OldPsrlno", oldPsrlno) :
                new ObjectParameter("OldPsrlno", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fQtyParameter = fQty.HasValue ?
                new ObjectParameter("FQty", fQty) :
                new ObjectParameter("FQty", typeof(decimal));
    
            var newFQtyParameter = newFQty.HasValue ?
                new ObjectParameter("NewFQty", newFQty) :
                new ObjectParameter("NewFQty", typeof(int));
    
            var mRPParameter = mRP.HasValue ?
                new ObjectParameter("MRP", mRP) :
                new ObjectParameter("MRP", typeof(decimal));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_InsertAppInvoiceChanges", invdateParameter, invnumParameter, custidParameter, custcodeParameter, customernameParameter, itemidParameter, itemcodeParameter, itemnameParameter, remarksParameter, oldqtyParameter, newqtyParameter, oldbatchParameter, newbatchParameter, checkernameParameter, changedatetimeParameter, descriptionParameter, isDeleteParameter, isStatusParameter, newPsrlnoParameter, invTypeParameter, routeNameParameter, oldPsrlnoParameter, idParameter, fQtyParameter, newFQtyParameter, mRPParameter, rateParameter);
        }
    
        public virtual int App_Checking_New_InsertInvoiceChangesToSaleAutomode(string custCode, Nullable<System.DateTime> invoiceDate, string invnum)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_InsertInvoiceChangesToSaleAutomode", custCodeParameter, invoiceDateParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_InsertInvoiceSummary(Nullable<System.DateTime> invdate, string checkername, string routename, string custcode, string customername, Nullable<int> totalines, Nullable<int> pickedlines, Nullable<int> checkedlines, Nullable<int> pendinglines, Nullable<int> noofbatchchanges, Nullable<int> noofqtychangelines, Nullable<int> noofnillines, Nullable<int> noofboxes, Nullable<int> noofpackets, string invType, string invnum)
        {
            var invdateParameter = invdate.HasValue ?
                new ObjectParameter("Invdate", invdate) :
                new ObjectParameter("Invdate", typeof(System.DateTime));
    
            var checkernameParameter = checkername != null ?
                new ObjectParameter("Checkername", checkername) :
                new ObjectParameter("Checkername", typeof(string));
    
            var routenameParameter = routename != null ?
                new ObjectParameter("routename", routename) :
                new ObjectParameter("routename", typeof(string));
    
            var custcodeParameter = custcode != null ?
                new ObjectParameter("custcode", custcode) :
                new ObjectParameter("custcode", typeof(string));
    
            var customernameParameter = customername != null ?
                new ObjectParameter("customername", customername) :
                new ObjectParameter("customername", typeof(string));
    
            var totalinesParameter = totalines.HasValue ?
                new ObjectParameter("Totalines", totalines) :
                new ObjectParameter("Totalines", typeof(int));
    
            var pickedlinesParameter = pickedlines.HasValue ?
                new ObjectParameter("pickedlines", pickedlines) :
                new ObjectParameter("pickedlines", typeof(int));
    
            var checkedlinesParameter = checkedlines.HasValue ?
                new ObjectParameter("checkedlines", checkedlines) :
                new ObjectParameter("checkedlines", typeof(int));
    
            var pendinglinesParameter = pendinglines.HasValue ?
                new ObjectParameter("pendinglines", pendinglines) :
                new ObjectParameter("pendinglines", typeof(int));
    
            var noofbatchchangesParameter = noofbatchchanges.HasValue ?
                new ObjectParameter("Noofbatchchanges", noofbatchchanges) :
                new ObjectParameter("Noofbatchchanges", typeof(int));
    
            var noofqtychangelinesParameter = noofqtychangelines.HasValue ?
                new ObjectParameter("Noofqtychangelines", noofqtychangelines) :
                new ObjectParameter("Noofqtychangelines", typeof(int));
    
            var noofnillinesParameter = noofnillines.HasValue ?
                new ObjectParameter("Noofnillines", noofnillines) :
                new ObjectParameter("Noofnillines", typeof(int));
    
            var noofboxesParameter = noofboxes.HasValue ?
                new ObjectParameter("Noofboxes", noofboxes) :
                new ObjectParameter("Noofboxes", typeof(int));
    
            var noofpacketsParameter = noofpackets.HasValue ?
                new ObjectParameter("Noofpackets", noofpackets) :
                new ObjectParameter("Noofpackets", typeof(int));
    
            var invTypeParameter = invType != null ?
                new ObjectParameter("InvType", invType) :
                new ObjectParameter("InvType", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_InsertInvoiceSummary", invdateParameter, checkernameParameter, routenameParameter, custcodeParameter, customernameParameter, totalinesParameter, pickedlinesParameter, checkedlinesParameter, pendinglinesParameter, noofbatchchangesParameter, noofqtychangelinesParameter, noofnillinesParameter, noofboxesParameter, noofpacketsParameter, invTypeParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_InsertUnPickedItems(string custCode, string customerName, Nullable<System.DateTime> invdt, Nullable<decimal> qty, Nullable<int> custId, string itemname, string pack, string location, string status, Nullable<decimal> newQty, string invnum, Nullable<int> itemid, Nullable<int> batchid, string batch, string expiry, Nullable<decimal> mrp, string itemcode, Nullable<int> routeid, string route, string block, string checkername, string checkerId, string phoneid, string pickerName)
        {
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var invdtParameter = invdt.HasValue ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(System.DateTime));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("Itemname", itemname) :
                new ObjectParameter("Itemname", typeof(string));
    
            var packParameter = pack != null ?
                new ObjectParameter("Pack", pack) :
                new ObjectParameter("Pack", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var newQtyParameter = newQty.HasValue ?
                new ObjectParameter("NewQty", newQty) :
                new ObjectParameter("NewQty", typeof(decimal));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            var itemidParameter = itemid.HasValue ?
                new ObjectParameter("Itemid", itemid) :
                new ObjectParameter("Itemid", typeof(int));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(int));
    
            var batchParameter = batch != null ?
                new ObjectParameter("Batch", batch) :
                new ObjectParameter("Batch", typeof(string));
    
            var expiryParameter = expiry != null ?
                new ObjectParameter("expiry", expiry) :
                new ObjectParameter("expiry", typeof(string));
    
            var mrpParameter = mrp.HasValue ?
                new ObjectParameter("mrp", mrp) :
                new ObjectParameter("mrp", typeof(decimal));
    
            var itemcodeParameter = itemcode != null ?
                new ObjectParameter("itemcode", itemcode) :
                new ObjectParameter("itemcode", typeof(string));
    
            var routeidParameter = routeid.HasValue ?
                new ObjectParameter("routeid", routeid) :
                new ObjectParameter("routeid", typeof(int));
    
            var routeParameter = route != null ?
                new ObjectParameter("route", route) :
                new ObjectParameter("route", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var checkernameParameter = checkername != null ?
                new ObjectParameter("checkername", checkername) :
                new ObjectParameter("checkername", typeof(string));
    
            var checkerIdParameter = checkerId != null ?
                new ObjectParameter("CheckerId", checkerId) :
                new ObjectParameter("CheckerId", typeof(string));
    
            var phoneidParameter = phoneid != null ?
                new ObjectParameter("Phoneid", phoneid) :
                new ObjectParameter("Phoneid", typeof(string));
    
            var pickerNameParameter = pickerName != null ?
                new ObjectParameter("PickerName", pickerName) :
                new ObjectParameter("PickerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_InsertUnPickedItems", custCodeParameter, customerNameParameter, invdtParameter, qtyParameter, custIdParameter, itemnameParameter, packParameter, locationParameter, statusParameter, newQtyParameter, invnumParameter, itemidParameter, batchidParameter, batchParameter, expiryParameter, mrpParameter, itemcodeParameter, routeidParameter, routeParameter, blockParameter, checkernameParameter, checkerIdParameter, phoneidParameter, pickerNameParameter);
        }
    
        public virtual int App_Checking_New_UpdateCheckerEndTime(string pickDate, string custCode, string block, Nullable<System.TimeSpan> endTime, string invnum)
        {
            var pickDateParameter = pickDate != null ?
                new ObjectParameter("pickDate", pickDate) :
                new ObjectParameter("pickDate", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.TimeSpan));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateCheckerEndTime", pickDateParameter, custCodeParameter, blockParameter, endTimeParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_UpdateCheckerStartTime(string pickDate, string custCode, string block, Nullable<System.TimeSpan> startTime, string invnum)
        {
            var pickDateParameter = pickDate != null ?
                new ObjectParameter("pickDate", pickDate) :
                new ObjectParameter("pickDate", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.TimeSpan));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateCheckerStartTime", pickDateParameter, custCodeParameter, blockParameter, startTimeParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_UpdateCheckList(string invdt, string custCode, string itemId, string batchid, Nullable<decimal> newQuenty, string chicked, string invNo, Nullable<System.TimeSpan> time, Nullable<int> id, Nullable<int> newFQty)
        {
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchidParameter = batchid != null ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(string));
    
            var newQuentyParameter = newQuenty.HasValue ?
                new ObjectParameter("NewQuenty", newQuenty) :
                new ObjectParameter("NewQuenty", typeof(decimal));
    
            var chickedParameter = chicked != null ?
                new ObjectParameter("Chicked", chicked) :
                new ObjectParameter("Chicked", typeof(string));
    
            var invNoParameter = invNo != null ?
                new ObjectParameter("InvNo", invNo) :
                new ObjectParameter("InvNo", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var newFQtyParameter = newFQty.HasValue ?
                new ObjectParameter("NewFQty", newFQty) :
                new ObjectParameter("NewFQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateCheckList", invdtParameter, custCodeParameter, itemIdParameter, batchidParameter, newQuentyParameter, chickedParameter, invNoParameter, timeParameter, idParameter, newFQtyParameter);
        }
    
        public virtual int App_Checking_New_UpdateChickingDetail(string pickDate, string custCode, string block, string invnum)
        {
            var pickDateParameter = pickDate != null ?
                new ObjectParameter("pickDate", pickDate) :
                new ObjectParameter("pickDate", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateChickingDetail", pickDateParameter, custCodeParameter, blockParameter, invnumParameter);
        }
    
        public virtual int App_Checking_New_UpdateItemBatchStatus(string invdt, string custCode, string itemId, string batchid, Nullable<decimal> newQuenty, string invNum, Nullable<System.TimeSpan> time, Nullable<int> id, string newBatchid, string newBatch, string batchQty, string manualBatch)
        {
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchidParameter = batchid != null ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(string));
    
            var newQuentyParameter = newQuenty.HasValue ?
                new ObjectParameter("NewQuenty", newQuenty) :
                new ObjectParameter("NewQuenty", typeof(decimal));
    
            var invNumParameter = invNum != null ?
                new ObjectParameter("InvNum", invNum) :
                new ObjectParameter("InvNum", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var newBatchidParameter = newBatchid != null ?
                new ObjectParameter("NewBatchid", newBatchid) :
                new ObjectParameter("NewBatchid", typeof(string));
    
            var newBatchParameter = newBatch != null ?
                new ObjectParameter("NewBatch", newBatch) :
                new ObjectParameter("NewBatch", typeof(string));
    
            var batchQtyParameter = batchQty != null ?
                new ObjectParameter("BatchQty", batchQty) :
                new ObjectParameter("BatchQty", typeof(string));
    
            var manualBatchParameter = manualBatch != null ?
                new ObjectParameter("ManualBatch", manualBatch) :
                new ObjectParameter("ManualBatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateItemBatchStatus", invdtParameter, custCodeParameter, itemIdParameter, batchidParameter, newQuentyParameter, invNumParameter, timeParameter, idParameter, newBatchidParameter, newBatchParameter, batchQtyParameter, manualBatchParameter);
        }
    
        public virtual int App_Checking_New_UpdateItemDeleteStatus(string invdt, string custCode, string itemId, string batchid, Nullable<decimal> newQuenty, string invNum, Nullable<System.TimeSpan> time, Nullable<int> id)
        {
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchidParameter = batchid != null ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(string));
    
            var newQuentyParameter = newQuenty.HasValue ?
                new ObjectParameter("NewQuenty", newQuenty) :
                new ObjectParameter("NewQuenty", typeof(decimal));
    
            var invNumParameter = invNum != null ?
                new ObjectParameter("InvNum", invNum) :
                new ObjectParameter("InvNum", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateItemDeleteStatus", invdtParameter, custCodeParameter, itemIdParameter, batchidParameter, newQuentyParameter, invNumParameter, timeParameter, idParameter);
        }
    
        public virtual int App_Checking_New_UpdateItemQty(string invdt, string custCode, string itemId, string batchid, Nullable<decimal> newQuenty, string invNum, Nullable<System.TimeSpan> time, Nullable<int> id, Nullable<int> newFQty)
        {
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchidParameter = batchid != null ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(string));
    
            var newQuentyParameter = newQuenty.HasValue ?
                new ObjectParameter("NewQuenty", newQuenty) :
                new ObjectParameter("NewQuenty", typeof(decimal));
    
            var invNumParameter = invNum != null ?
                new ObjectParameter("InvNum", invNum) :
                new ObjectParameter("InvNum", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var newFQtyParameter = newFQty.HasValue ?
                new ObjectParameter("NewFQty", newFQty) :
                new ObjectParameter("NewFQty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateItemQty", invdtParameter, custCodeParameter, itemIdParameter, batchidParameter, newQuentyParameter, invNumParameter, timeParameter, idParameter, newFQtyParameter);
        }
    
        public virtual int App_Checking_New_UpdateUnpick(string invdt, string custCode, string itemId, string batchid, string invnum)
        {
            var invdtParameter = invdt != null ?
                new ObjectParameter("Invdt", invdt) :
                new ObjectParameter("Invdt", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("custCode", custCode) :
                new ObjectParameter("custCode", typeof(string));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(string));
    
            var batchidParameter = batchid != null ?
                new ObjectParameter("Batchid", batchid) :
                new ObjectParameter("Batchid", typeof(string));
    
            var invnumParameter = invnum != null ?
                new ObjectParameter("Invnum", invnum) :
                new ObjectParameter("Invnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("App_Checking_New_UpdateUnpick", invdtParameter, custCodeParameter, itemIdParameter, batchidParameter, invnumParameter);
        }
    }
}
